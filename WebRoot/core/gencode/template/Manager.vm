package $bean.getPackageName();

import java.util.List;

import com.linewell.core.system.GlobalParameter;
import com.linewell.core.db.DbObjectManager;

/**
 * <p>
 *  $bean.getTableComments()数据库操作
 * </p>
 * 
 * @author:$bean.getCreater() email:$bean.getCreaterEmail()
 * @version 1.0.0 $bean.getCreateTime()
 *
 */
class $bean.getBeanName()Manager {
	
	private DbObjectManager dbObjectManager = new DbObjectManager("${bean.getTableName()}","${bean.getPk_Name()}","${bean.getAppid()}");
	
	/**
	 * 新增
	 */
	public boolean doSave($bean.getBeanName() $bean.getBeanCName()){
		return dbObjectManager.doSave($bean.getBeanCName());
	}
	
	/**
	 * 更新
	 */
	public boolean doUpdate($bean.getBeanName() $bean.getBeanCName()){
		return dbObjectManager.doUpdate($bean.getBeanCName());
	}
	
	/**
	 * 根据主键找单个对象
	 */
	public $bean.getBeanName() doFindBeanByKey(String keyValue){
		Object[] objs = new Object[1];
		objs[0] = keyValue;
		return doFindBeanByCondition("unid =?",objs);
	}
	
	/**
	 * 根据条件查找单个对象
	 */
	public $bean.getBeanName() doFindBeanByCondition(String condition,Object[] objs){
		List list = this.doFindListByCondition(condition, objs);
		return (null != list && !list.isEmpty()) ? ($bean.getBeanName())list.get(0) : null;
	}

	/**
	 * 自定义条件查询对象列表
	 */
	public List doFindListByCondition(String condition,Object[] objs){
		return dbObjectManager.doFindListByCondition(new $bean.getBeanName()(),condition,objs);
	}
	
	/**
	 * 根据主键删除单个对象
	 */
	public boolean doDeleteByKey(String keyValue){
		String condition = "${bean.getPk_Name()}='" + keyValue + "'";
		return dbObjectManager.doDeleteByCondition(condition);
	}
	
	/**
	 * 根据查询条件删除
	 */
	public boolean doDeleteByCondition(String condition,Object[] objs){
		return dbObjectManager.doDeleteByCondition(condition,objs);
	}
}